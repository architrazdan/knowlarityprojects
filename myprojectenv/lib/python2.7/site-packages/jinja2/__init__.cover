       # -*- coding: utf-8 -*-
       """
           jinja2
           ~~~~~~
       
           Jinja2 is a template engine written in pure Python.  It provides a
           Django inspired non-XML syntax but supports inline expressions and
           an optional sandboxed environment.
       
           Nutshell
           --------
       
           Here a small example of a Jinja2 template::
       
               {% extends 'base.html' %}
               {% block title %}Memberlist{% endblock %}
               {% block content %}
                 <ul>
                 {% for user in users %}
                   <li><a href="{{ user.url }}">{{ user.username }}</a></li>
                 {% endfor %}
                 </ul>
               {% endblock %}
       
       
           :copyright: (c) 2010 by the Jinja Team.
           :license: BSD, see LICENSE for more details.
    1: """
    1: __docformat__ = 'restructuredtext en'
    1: __version__ = '2.8'
       
       # high level interface
    1: from jinja2.environment import Environment, Template
       
       # loaders
    1: from jinja2.loaders import BaseLoader, FileSystemLoader, PackageLoader, \
            DictLoader, FunctionLoader, PrefixLoader, ChoiceLoader, \
            ModuleLoader
       
       # bytecode caches
    1: from jinja2.bccache import BytecodeCache, FileSystemBytecodeCache, \
            MemcachedBytecodeCache
       
       # undefined types
    1: from jinja2.runtime import Undefined, DebugUndefined, StrictUndefined, \
            make_logging_undefined
       
       # exceptions
    1: from jinja2.exceptions import TemplateError, UndefinedError, \
            TemplateNotFound, TemplatesNotFound, TemplateSyntaxError, \
            TemplateAssertionError
       
       # decorators and public utilities
    1: from jinja2.filters import environmentfilter, contextfilter, \
            evalcontextfilter
    1: from jinja2.utils import Markup, escape, clear_caches, \
            environmentfunction, evalcontextfunction, contextfunction, \
            is_undefined
       
       __all__ = [
    1:     'Environment', 'Template', 'BaseLoader', 'FileSystemLoader',
    1:     'PackageLoader', 'DictLoader', 'FunctionLoader', 'PrefixLoader',
    1:     'ChoiceLoader', 'BytecodeCache', 'FileSystemBytecodeCache',
    1:     'MemcachedBytecodeCache', 'Undefined', 'DebugUndefined',
    1:     'StrictUndefined', 'TemplateError', 'UndefinedError', 'TemplateNotFound',
    1:     'TemplatesNotFound', 'TemplateSyntaxError', 'TemplateAssertionError',
    1:     'ModuleLoader', 'environmentfilter', 'contextfilter', 'Markup', 'escape',
    1:     'environmentfunction', 'contextfunction', 'clear_caches', 'is_undefined',
    1:     'evalcontextfilter', 'evalcontextfunction', 'make_logging_undefined',
       ]
