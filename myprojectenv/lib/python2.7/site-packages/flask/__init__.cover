       # -*- coding: utf-8 -*-
       """
           flask
           ~~~~~
       
           A microframework based on Werkzeug.  It's extensively documented
           and follows best practice patterns.
       
           :copyright: (c) 2011 by Armin Ronacher.
           :license: BSD, see LICENSE for more details.
    1: """
       
    1: __version__ = '0.10.1'
       
       # utilities we import from Werkzeug and Jinja2 that are unused
       # in the module but are exported as public interface.
    1: from werkzeug.exceptions import abort
    1: from werkzeug.utils import redirect
    1: from jinja2 import Markup, escape
       
    1: from .app import Flask, Request, Response
    1: from .config import Config
    1: from .helpers import url_for, flash, send_file, send_from_directory, \
           get_flashed_messages, get_template_attribute, make_response, safe_join, \
           stream_with_context
    1: from .globals import current_app, g, request, session, _request_ctx_stack, \
            _app_ctx_stack
    1: from .ctx import has_request_context, has_app_context, \
            after_this_request, copy_current_request_context
    1: from .module import Module
    1: from .blueprints import Blueprint
    1: from .templating import render_template, render_template_string
       
       # the signals
    1: from .signals import signals_available, template_rendered, request_started, \
            request_finished, got_request_exception, request_tearing_down, \
            appcontext_tearing_down, appcontext_pushed, \
            appcontext_popped, message_flashed
       
       # We're not exposing the actual json module but a convenient wrapper around
       # it.
    1: from . import json
       
       # This was the only thing that flask used to export at one point and it had
       # a more generic name.
    1: jsonify = json.jsonify
       
       # backwards compat, goes away in 1.0
    1: from .sessions import SecureCookieSession as Session
    1: json_available = True
