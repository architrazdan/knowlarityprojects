       # -*- coding: utf-8 -*-
       """
           flask.globals
           ~~~~~~~~~~~~~
       
           Defines all the global objects that are proxies to the current
           active context.
       
           :copyright: (c) 2011 by Armin Ronacher.
           :license: BSD, see LICENSE for more details.
    1: """
       
    1: from functools import partial
    1: from werkzeug.local import LocalStack, LocalProxy
       
       
    1: def _lookup_req_object(name):
   50:     top = _request_ctx_stack.top
   50:     if top is None:
               raise RuntimeError('working outside of request context')
   50:     return getattr(top, name)
       
       
    1: def _lookup_app_object(name):
           top = _app_ctx_stack.top
           if top is None:
               raise RuntimeError('working outside of application context')
           return getattr(top, name)
       
       
    1: def _find_app():
           top = _app_ctx_stack.top
           if top is None:
               raise RuntimeError('working outside of application context')
           return top.app
       
       
       # context locals
    1: _request_ctx_stack = LocalStack()
    1: _app_ctx_stack = LocalStack()
    1: current_app = LocalProxy(_find_app)
    1: request = LocalProxy(partial(_lookup_req_object, 'request'))
    1: session = LocalProxy(partial(_lookup_req_object, 'session'))
    1: g = LocalProxy(partial(_lookup_app_object, 'g'))
